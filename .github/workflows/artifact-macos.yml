name: Build Watchman macOS

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    env:
      DEPENDENCY_DIR: /usr/local/var/getdeps
      GETDEPS_BUILD_DIR: /usr/local/var/getdeps/build
      ACTIONS_RUNTIME_TOKEN: ${{ github.token }}
      ACTIONS_CACHE_URL: ${{ vars.ACTIONS_CACHE_URL || 'https://actions-cache.github.com/api/' }}
      CFLAGS: "-w"
      CXXFLAGS: "-w"

    steps:
    - name: Clone Watchman
      uses: actions/checkout@v4
      with:
        repository: facebook/watchman
        path: watchman
        fetch-depth: 1
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: getdeps cache
      uses: actions/cache@v3
      with:
        path: /usr/local/var/getdeps
        key: macos-getdeps-v1-${{ github.sha }}
        restore-keys: |
          macos-getdeps-v1-

    - name: Build Watchman
      working-directory: watchman
      run: |
        export CC=clang
        export CXX=clang++
        export GETDEPS_PACKAGE_DIR="${GITHUB_WORKSPACE}/watchman/build/fbcode_builder/manifests"

        python3 build/fbcode_builder/getdeps.py --allow-system-packages \
          install-system-deps --recursive watchman 2>/dev/null || exit 1

        python3 build/fbcode_builder/getdeps.py --allow-system-packages \
          build --src-dir="${PWD}" --no-tests watchman 2>/dev/null || exit 1

    - name: Create Package
      run: |
        cd watchman || exit 1
        mkdir -p package/watchman

        echo "Finding watchman binaries..."
        echo "Looking for files named 'watchman' or 'watchmanctl':"
        find . -type f \( -name watchman -o -name watchmanctl \) -exec ls -l {} \;

        echo -e "\nChecking build directory structure:"
        ls -R build

        echo -e "\nChecking getdeps build info..."
        BUILD_DIR=$(python3 build/fbcode_builder/getdeps.py show-build-dir watchman)
        INSTALL_DIR=$(python3 build/fbcode_builder/getdeps.py show-install-dir watchman)

        echo "Build directory: ${BUILD_DIR}"
        echo "Install directory: ${INSTALL_DIR}"

        # Look in both build and install directories
        for DIR in "${BUILD_DIR}" "${INSTALL_DIR}"; do
          if [ -d "${DIR}" ]; then
            echo -e "\nSearching in ${DIR}:"
            find "${DIR}" -type f \( -name watchman -o -name watchmanctl \) -exec ls -l {} \;
          fi
        done

        # Let's see what files are in bin directories
        for DIR in "./build" "${BUILD_DIR}" "${INSTALL_DIR}"; do
          if [ -d "${DIR}/bin" ]; then
            echo -e "\nContents of ${DIR}/bin:"
            ls -l "${DIR}/bin"
          fi
        done

        if [ -d "${INSTALL_DIR}/bin" ] && [ -f "${INSTALL_DIR}/bin/watchman" ]; then
          echo "Found watchman in ${INSTALL_DIR}/bin, copying files..."
          cp "${INSTALL_DIR}/bin/watchman" package/watchman/ || {
            echo "Error: Failed to copy watchman binary"
            exit 1
          }

          cp "${INSTALL_DIR}/bin/watchmanctl" package/watchman/ || {
            echo "Error: Failed to copy watchmanctl binary"
            exit 1
          }
        else
          echo "Error: Binaries not found in expected location"
          exit 1
        fi

        if [ ! -f LICENSE ]; then
          echo "Error: LICENSE file not found"
          exit 1
        fi

        cp LICENSE package/watchman/
        cd package || exit 1
        tar -czf watchman-macos.tar.gz watchman/

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: watchman-macos
        path: watchman/package/watchman-macos.tar.gz
        retention-days: 7
