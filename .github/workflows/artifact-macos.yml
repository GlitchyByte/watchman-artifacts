name: build-watchman
run-name: Build Watchman macOS

on:
  workflow_dispatch:

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.release_version.outputs.release_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get release version
        id: release_version
        run: |
          release_version=$(curl -s https://api.github.com/repos/facebook/watchman/releases/latest | jq -r .tag_name)
          echo "release_version=${release_version}" >> "$GITHUB_OUTPUT"

      - name: Delete version if it exists
        run: gh release delete ${{ steps.release_version.outputs.release_version }} --cleanup-tag -y || true

      - name: Delay between delete and create
        run: sleep 2

      - name: Create release
        run: gh release create ${{ steps.release_version.outputs.release_version }} -t "${{ steps.release_version.outputs.release_version }}" -F release.md

      - name: Keep 3 releases
        run: |
          releases=$(gh release list)
          releaseCount=$(echo "$releases" | wc -l)
          keep=3
          if [ "$releaseCount" -gt "$keep" ]; then
            extra=$((releaseCount - keep))
            tags=$(echo "$releases" | tail -n $extra | cut -f3)
            for tag in $tags; do
              gh release delete ${tag} --cleanup-tag -y
            done
          fi

  release_artifacts:
    needs: create_release
    runs-on: ${{ matrix.os }}
    env:
      RELEASE_VERSION: ${{ needs.create_release.outputs.release_version }}
      CFLAGS: "-w"
      CXXFLAGS: "-w"

    strategy:
      matrix:
        os: [ macos-13, macos-14 ]

    steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Clone Watchman
      uses: actions/checkout@v4
      with:
        repository: facebook/watchman
        path: watchman
        fetch-depth: 1
        submodules: recursive
        ref: ${{ env.RELEASE_VERSION }}

    - name: Build Watchman
      working-directory: watchman
      run: |
        export CC=clang
        export CXX=clang++
        export GETDEPS_PACKAGE_DIR="${GITHUB_WORKSPACE}/watchman/build/fbcode_builder/manifests"

        python3 build/fbcode_builder/getdeps.py --allow-system-packages \
          install-system-deps --recursive watchman 2>/dev/null || exit 1

        python3 build/fbcode_builder/getdeps.py --allow-system-packages \
          build --src-dir="${PWD}" --no-tests watchman 2>/dev/null || exit 1

    - name: Create package
      run: |
        cd watchman || exit 1
        mkdir -p package/watchman

        INST_DIR=$(python3 build/fbcode_builder/getdeps.py --allow-system-packages show-inst-dir watchman)
        echo "Install directory: ${INST_DIR}"

        if [ ! -f "${INST_DIR}/bin/watchman" ] || [ ! -f "${INST_DIR}/bin/watchmanctl" ]; then
          echo "Error: Binaries not found in ${INST_DIR}/bin"
          exit 1
        fi
        if [ ! -f LICENSE ]; then
          echo "Error: LICENSE file not found"
          exit 1
        }

        echo "Copying binaries from ${INST_DIR}/bin"
        cp LICENSE "${INST_DIR}/bin/watchman" "${INST_DIR}/bin/watchmanctl" package/watchman/

        # tar -czf watchman-macos.tar.gz -C package watchman/

    - name: Zip macOS x64
      if: matrix.os == 'macos-13'
      env:
        ZIP_NAME: watchman-macos-x64.tar.gz
      run: |
        tar -czf ${{ env.ZIP_NAME }} -C watchman/package watchman/
        gh release upload ${{ env.RELEASE_VERSION }} ${{ env.ZIP_NAME }} --clobber

    - name: Zip macOS aarch64
      if: matrix.os == 'macos-14'
      env:
        ZIP_NAME: watchman-macos-aarch64.tar.gz
      run: |
        tar -czf ${{ env.ZIP_NAME }} -C watchman/package watchman/
        gh release upload ${{ env.RELEASE_VERSION }} ${{ env.ZIP_NAME }} --clobber
